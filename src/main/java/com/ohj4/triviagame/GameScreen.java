package com.ohj4.triviagame;

import javax.swing.*;
//import javax.swing.text.html.HTMLDocument.HTMLReader.IsindexAction;

import java.awt.*;
import java.awt.event.*;
//import java.security.acl.Group;

import java.util.List;

public class GameScreen{
        /**
     * Creates new form GameScreen
     */
    private JPanel panel;
        private int showConfirmDialog;



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    public void initComponents(GroupLayout layout) {

       // panel = new JPanel();


        jLabel1 = new javax.swing.JLabel();
        playerTurnLabel = new javax.swing.JLabel();
        QuitButton = new javax.swing.JButton();
        Player1RankingLabel = new javax.swing.JLabel();
        Player2RankingLabel = new javax.swing.JLabel();
        Player3RankingLabel = new javax.swing.JLabel();
        Player4RankingLabel = new javax.swing.JLabel();
        Player1ScoreLabel = new javax.swing.JLabel();
        Player2ScoreLabel = new javax.swing.JLabel();
        Player3ScoreLabel = new javax.swing.JLabel();
        Player4ScoreLabel = new javax.swing.JLabel();
        AnswerOption_A = new javax.swing.JButton();
        AnswerOption_B = new javax.swing.JButton();
        AnswerOption_C = new javax.swing.JButton();
        AnswerOption_D = new javax.swing.JButton();
        SkipButton = new javax.swing.JButton();
        FiftyFiftyButton = new javax.swing.JButton();
        DoublePointsButton = new javax.swing.JButton();
        RankingLabel_1 = new javax.swing.JLabel();
        RankingLabel_2 = new javax.swing.JLabel();
        RankingLabel_4 = new javax.swing.JLabel();
        RankingLabel_3 = new javax.swing.JLabel();
        QuestionCounter = new javax.swing.JLabel();
        QuestionLabel = new javax.swing.JLabel();
        TimerLabel = new javax.swing.JLabel();
        B_Label = new javax.swing.JLabel();
        A_Label = new javax.swing.JLabel();
        D_Label = new javax.swing.JLabel();
        C_Label = new javax.swing.JLabel();
        background = new JLabel();

        jLabel1.setText("jLabel1");

        //panel.setBackground(new java.awt.Color(17, 104, 165));
        ImageIcon image = new ImageIcon("/com/ohj4/triviagame/icons/Background1.png");
        background = new JLabel("",image,JLabel.CENTER);
        background.setBounds(0, 0, 1200, 700);
        panel.add(background);

        //setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        //setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        playerTurnLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        playerTurnLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        //playerTurnLabel.setText("player 2");

        QuitButton.setBackground(new java.awt.Color(255, 0, 0));
        QuitButton.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        QuitButton.setText("Quit");
        QuitButton.setFocusable(false);
        QuitButton.setActionCommand("STARTSCREEN");
        QuitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitButtonActionPerformed(evt);
            }
        });

        Player1RankingLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        Player1RankingLabel.setForeground(new java.awt.Color(0, 0, 255));
        //Player1RankingLabel.setText("Nick 1");

        Player2RankingLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        Player2RankingLabel.setForeground(new java.awt.Color(255, 0, 0));
        //Player2RankingLabel.setText("player 2");

        Player3RankingLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        Player3RankingLabel.setForeground(new java.awt.Color(255, 255, 0));
        //Player3RankingLabel.setText("player 3");

        Player4RankingLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        Player4RankingLabel.setForeground(new java.awt.Color(0, 204, 0));
        //Player4RankingLabel.setText("player 4");

        Player1ScoreLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        Player1ScoreLabel.setForeground(new java.awt.Color(0, 0, 255));
        //Player1ScoreLabel.setText("(666)");

        Player2ScoreLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        Player2ScoreLabel.setForeground(new java.awt.Color(255, 0, 0));
        //Player2ScoreLabel.setText("(420)");

        Player3ScoreLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        Player3ScoreLabel.setForeground(new java.awt.Color(255, 255, 0));
        //Player3ScoreLabel.setText("(298)");

        Player4ScoreLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        Player4ScoreLabel.setForeground(new java.awt.Color(0, 204, 0));
        //Player4ScoreLabel.setText("(190)");

        AnswerOption_A.setBackground(new java.awt.Color(102, 0, 102));
        AnswerOption_A.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        AnswerOption_A.setForeground(new java.awt.Color(153, 153, 0));
        AnswerOption_A.setText("Java");
        AnswerOption_A.setActionCommand("");
        AnswerOption_A.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AnswerOption_A.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AnswerOption_A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnswerOption_AActionPerformed(evt);
            }
        });

        AnswerOption_B.setBackground(new java.awt.Color(102, 0, 102));
        AnswerOption_B.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        AnswerOption_B.setForeground(new java.awt.Color(153, 153, 0));
        AnswerOption_B.setText("Javascript");
        AnswerOption_B.setActionCommand("");
        AnswerOption_B.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AnswerOption_B.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AnswerOption_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnswerOption_BActionPerformed(evt);
            }
        });

        AnswerOption_C.setBackground(new java.awt.Color(102, 0, 102));
        AnswerOption_C.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        AnswerOption_C.setForeground(new java.awt.Color(153, 153, 0));
        AnswerOption_C.setText("Java Source");
        AnswerOption_C.setActionCommand("");
        AnswerOption_C.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AnswerOption_C.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AnswerOption_C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnswerOption_CActionPerformed(evt);
            }
        });

        AnswerOption_D.setBackground(new java.awt.Color(102, 0, 102));
        AnswerOption_D.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        AnswerOption_D.setForeground(new java.awt.Color(153, 153, 0));
        AnswerOption_D.setText("C++");
        AnswerOption_D.setActionCommand("");
        AnswerOption_D.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AnswerOption_D.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AnswerOption_D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnswerOption_DActionPerformed(evt);
            }
        });

        SkipButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ohj4/triviagame/icons/Skip75x75.png"))); // NOI18N
        SkipButton.setToolTipText("Skip this question");
        SkipButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lifeLinePlayed(evt);
            }
        });
        

        FiftyFiftyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ohj4/triviagame/icons/50-50.png"))); // NOI18N
        FiftyFiftyButton.setToolTipText("Eliminate two wrong answers");
        FiftyFiftyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lifeLinePlayed(evt);
            }
        });

        DoublePointsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ohj4/triviagame/icons/2x-ikoni.png"))); // NOI18N
        DoublePointsButton.setToolTipText("Double points from this question");
        DoublePointsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lifeLinePlayed(evt);
            }
        });

        RankingLabel_1.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        RankingLabel_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RankingLabel_1.setText("1. ");

        RankingLabel_2.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        RankingLabel_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RankingLabel_2.setText("2. ");

        RankingLabel_4.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        RankingLabel_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RankingLabel_4.setText("4. ");

        RankingLabel_3.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        RankingLabel_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RankingLabel_3.setText("3. ");

        QuestionCounter.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        QuestionCounter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        QuestionCounter.setText("3/10");

        QuestionLabel.setFont(new java.awt.Font("DejaVu Sans", 0, 24)); // NOI18N
        QuestionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        QuestionLabel.setText("What Programming language does Node.js use?");
        QuestionLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(255, 0, 0)));

        TimerLabel.setFont(new java.awt.Font("Nimbus Roman", 1, 36)); // NOI18N
        TimerLabel.setForeground(new java.awt.Color(255, 51, 255));
        TimerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TimerLabel.setText("0:28");

        B_Label.setBackground(new java.awt.Color(102, 0, 102));
        B_Label.setFont(new java.awt.Font("DejaVu Sans", 0, 24)); // NOI18N
        B_Label.setForeground(new java.awt.Color(153, 153, 0));
        B_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        B_Label.setText("B)");
        B_Label.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        A_Label.setBackground(new java.awt.Color(102, 0, 102));
        A_Label.setFont(new java.awt.Font("DejaVu Sans", 0, 24)); // NOI18N
        A_Label.setForeground(new java.awt.Color(153, 153, 0));
        A_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        A_Label.setText("A)");
        A_Label.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        D_Label.setBackground(new java.awt.Color(102, 0, 102));
        D_Label.setFont(new java.awt.Font("DejaVu Sans", 0, 24)); // NOI18N
        D_Label.setForeground(new java.awt.Color(153, 153, 0));
        D_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        D_Label.setText("D)");
        D_Label.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        C_Label.setBackground(new java.awt.Color(102, 0, 102));
        C_Label.setFont(new java.awt.Font("DejaVu Sans", 0, 24)); // NOI18N
        C_Label.setForeground(new java.awt.Color(153, 153, 0));
        C_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        C_Label.setText("C)");
        C_Label.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        //layout = new javax.swing.GroupLayout(getContentPane());
        //getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(365, 365, 365)
                .addComponent(DoublePointsButton)
                .addGap(121, 121, 121)
                .addComponent(FiftyFiftyButton)
                .addGap(119, 119, 119)
                .addComponent(SkipButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(playerTurnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(165, 165, 165)
                        .addComponent(QuestionCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(286, 286, 286))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(A_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AnswerOption_A, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(C_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AnswerOption_C, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(D_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AnswerOption_D, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(B_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AnswerOption_B, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TimerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(RankingLabel_1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, 150)
                                    .addComponent(RankingLabel_2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, 150)
                                    .addComponent(RankingLabel_4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, 150)
                                    .addComponent(RankingLabel_3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, 150))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Player3RankingLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Player2RankingLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Player1RankingLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Player4RankingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Player2ScoreLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Player1ScoreLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Player3ScoreLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Player4ScoreLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(823, 823, 823)
                                        .addComponent(QuitButton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(QuestionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(45, 45, 45))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Player1RankingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Player1ScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RankingLabel_1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Player2RankingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Player2ScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RankingLabel_2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Player3RankingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Player3ScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RankingLabel_3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Player4RankingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Player4ScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RankingLabel_4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playerTurnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QuestionCounter))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(QuitButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(QuestionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TimerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(DoublePointsButton)
                    .addComponent(SkipButton)
                    .addComponent(FiftyFiftyButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AnswerOption_A, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AnswerOption_B, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(A_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AnswerOption_C, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AnswerOption_D, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46))
        );

        panel.addComponentListener( new ComponentAdapter() {
            @Override
            public void componentShown( ComponentEvent e ) {
                updateComponents();
            }
        });
        //pack();
    }// </editor-fold>  
    
    public JPanel getPanel() {
        return panel;
    }


    private void QuitButtonActionPerformed(java.awt.event.ActionEvent e) {                                           
        
        showConfirmDialog = JOptionPane.showConfirmDialog(panel.getParent(), "Are you sure you want to quit?", "Sure?", JOptionPane.YES_NO_OPTION);
        //System.out.println(showConfirmDialog);
        if (showConfirmDialog == 0)
        //System.exit(0);
        CardLayoutManager.getInstance().setScreen(e);
    }                                          

    private void AnswerOption_AActionPerformed(java.awt.event.ActionEvent evt) { 
        
        GameState.getInstance().submitAnswer(AnswerOption_A.getActionCommand());
        CardLayoutManager.getInstance().setScreen("ANSWERSCREEN");
            
    }                                              

    private void AnswerOption_BActionPerformed(java.awt.event.ActionEvent evt) {         
        
        GameState.getInstance().submitAnswer(AnswerOption_B.getActionCommand());
        CardLayoutManager.getInstance().setScreen("ANSWERSCREEN");
        
    }                                              

    private void AnswerOption_CActionPerformed(java.awt.event.ActionEvent evt) {       
        
        GameState.getInstance().submitAnswer(AnswerOption_C.getActionCommand());
        CardLayoutManager.getInstance().setScreen("ANSWERSCREEN");

    }                                              

    private void AnswerOption_DActionPerformed(java.awt.event.ActionEvent evt) {  
        
        GameState.getInstance().submitAnswer(AnswerOption_D.getActionCommand());
        CardLayoutManager.getInstance().setScreen("ANSWERSCREEN");

    }       
    
    private void lifeLinePlayed(java.awt.event.ActionEvent evt) {
        JOptionPane.showMessageDialog(panel.getParent(), "Not yet implemented", "Missing functionality", JOptionPane.WARNING_MESSAGE);
    }

    private void updateComponents() {

        GameState game = GameState.getInstance();

        playerTurnLabel.setText(game.getCurrentPlayerName());
        QuestionCounter.setText(game.getRoundDisplay());
        QuestionLabel.setText(game.getQuestionString());
        QuestionLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, game.getCurrentPlayer().getGameColor()));
        TimerLabel.setForeground(game.getCurrentPlayer().getGameColor());

        List<Player> players = game.getPlayerNamesAndScores();

        Player1RankingLabel.setText(players.get(0).getName());
        Player1RankingLabel.setForeground(players.get(0).getGameColor());
        Player1ScoreLabel.setText(String.valueOf(players.get(0).getScore()));
        Player1ScoreLabel.setForeground(players.get(0).getGameColor());

        if (players.get(1).getName().length() > 0) {
            Player2RankingLabel.setText(players.get(1).getName());
            Player2RankingLabel.setForeground(players.get(1).getGameColor());
            Player2ScoreLabel.setText(String.valueOf(players.get(1).getScore()));
            Player2ScoreLabel.setForeground(players.get(1).getGameColor());
        }


        if (players.get(2).getName().length() > 0) {
            Player3RankingLabel.setText(players.get(2).getName());
            Player3RankingLabel.setForeground(players.get(2).getGameColor());
            Player3ScoreLabel.setText(String.valueOf(players.get(2).getScore()));
            Player3ScoreLabel.setForeground(players.get(2).getGameColor());
        }

        if (players.get(2).getName().length() > 0) {
            Player4RankingLabel.setText(players.get(3).getName());
            Player4RankingLabel.setForeground(players.get(3).getGameColor());
            Player4ScoreLabel.setText(String.valueOf(players.get(3).getScore()));
            Player4ScoreLabel.setForeground(players.get(3).getGameColor());
        }


        List<String> answers = game.getAnswerOptions();

        AnswerOption_A.setText(answers.get(0));
        AnswerOption_A.setActionCommand(answers.get(0));
        AnswerOption_B.setText(answers.get(1));
        AnswerOption_B.setActionCommand(answers.get(1));
        AnswerOption_C.setText(answers.get(2));
        AnswerOption_C.setActionCommand(answers.get(2));
        AnswerOption_D.setText(answers.get(3));
        AnswerOption_D.setActionCommand(answers.get(3));

/*         ActionListener turnEnder = new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
            if (GameState.getInstance().endTurn()) {
                CardLayoutManager.getInstance().setScreen("GAMESCREEN");
            }
            else {
                CardLayoutManager.getInstance().setScreen("SCORES");
            }
        }
        };
        Timer scoreScreenTimer = new Timer(2500, turnEnder);
        scoreScreenTimer.setRepeats(false);
        scoreScreenTimer.start(); */
    }
    /**
     * @param args the command line arguments
     */
   
   
   //  public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       /* java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameScreen().setVisible(true);
            }
        });
    } */

    // Variables declaration - do not modify                     
    private javax.swing.JLabel A_Label;
    private javax.swing.JButton AnswerOption_A;
    private javax.swing.JButton AnswerOption_B;
    private javax.swing.JButton AnswerOption_C;
    private javax.swing.JButton AnswerOption_D;
    private javax.swing.JLabel B_Label;
    private javax.swing.JLabel C_Label;
    private javax.swing.JLabel D_Label;
    private javax.swing.JButton DoublePointsButton;
    private javax.swing.JButton FiftyFiftyButton;
    private javax.swing.JLabel Player1RankingLabel;
    private javax.swing.JLabel Player1ScoreLabel;
    private javax.swing.JLabel Player2RankingLabel;
    private javax.swing.JLabel Player2ScoreLabel;
    private javax.swing.JLabel Player3RankingLabel;
    private javax.swing.JLabel Player3ScoreLabel;
    private javax.swing.JLabel Player4RankingLabel;
    private javax.swing.JLabel Player4ScoreLabel;
    private javax.swing.JLabel QuestionCounter;
    private javax.swing.JLabel QuestionLabel;
    private javax.swing.JButton QuitButton;
    private javax.swing.JLabel RankingLabel_1;
    private javax.swing.JLabel RankingLabel_2;
    private javax.swing.JLabel RankingLabel_3;
    private javax.swing.JLabel RankingLabel_4;
    private javax.swing.JButton SkipButton;
    private javax.swing.JLabel TimerLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel playerTurnLabel;
    private JLabel background;
    // End of variables declaration  
    
    
    private void createPanelAndLayout() {

        panel = new JPanel();

        GroupLayout layout = new GroupLayout(panel);
        //layout.setAutoCreateGaps(true);
        //layout.setAutoCreateContainerGaps(true);
        panel.setLayout(layout);

        initComponents(layout);
        
    }
    
    public GameScreen(){
        createPanelAndLayout();
    }

}

